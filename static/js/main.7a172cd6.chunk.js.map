{"version":3,"sources":["nyc.CSV","seattle.CSV","houston.CSV","d3SolarRadial.js","SolarRadial.js","Tooltip.js","Legend.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","hours","range","months","month","startDateID","endDateID","renderSolarRadial","key","svgContainer","data","_ref","svgWidth","radius","_ref$endAngle","endAngle","_ref$monthLabelInnerP","monthLabelInnerPortion","_ref$monthLabelOuterP","monthLabelOuterPortion","handleMouseOver","handleMouseOut","colorScale","ringSize","length","pieGenerator","pie","sort","value","d","monthPieGenerator","g","select","append","attr","concat","forEach","h","solarRingUpdate","selectAll","filter","time","date","split","slice","join","exit","remove","enter","merge","on","pathId","this","replace","each","transition","ease","easeLinear","delay","i","attrTween","ringIndex","indexOf","arcStartAngle","index","arcEndAngle","arcInterpolate","interpolate","t","arc","innerRadius","outerRadius","startAngle","timeLabelupdate","style","duration","text","monthLabelsGroup","monthArcsUpdate","arcPath","arcLastACommand","exec","lineStart","lineEnd","monthLabelTexts","cityLookup","nyc","seattle","houston","SolarRadial","svgRef","React","createRef","nextProps","nextState","hoverId","props","id","current","containerWidth","react_default","a","createElement","className","ref","width","height","Component","Tooltip","DBT","DPT","windspd","selectedMetric","color","fontSize","Legend","axisRef","renderTicks","axisScale","scaleLinear","domain","_this","legendWidth","svgHeight","legendHeight","call","axisBottom","ticks","tickSize","_this$props","map","n","offset","stopColor","transform","fill","scaleSequential","interpolateOrRd","App","state","solarData","isLoaded","tooltipData","containerRef","day","Object","keys","city","startsWith","parseInt","setState","handleChange","filterSolarData","cityData","parseFloat","fetchData","Promise","all","csv","NYC","HOUSTON","SEATTLE","then","responses","push","hour","includes","_ref2","slicedToArray","window","innerWidth","preProps","prevState","_this2","_this$state","lib","name","selectedValue","onChange","src_SolarRadial","Tooltip_Tooltip","assign","position","left","top","src_Legend","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a172cd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nyc.50fcef23.CSV\";","module.exports = __webpack_public_path__ + \"static/media/seattle.1dec6aa3.CSV\";","module.exports = __webpack_public_path__ + \"static/media/houston.c2cb2321.CSV\";","import { pie, arc, select, selectAll, easeLinear, interpolate } from \"d3\";\nimport { range, indexOf } from \"lodash\";\nconst hours = range(7, 20);\nconst months = [\n  { month: \"January\", startDateID: 0, endDateID: 30 },\n  { month: \"February\", startDateID: 31, endDateID: 58 },\n  { month: \"March\", startDateID: 59, endDateID: 89 },\n  { month: \"April\", startDateID: 90, endDateID: 119 },\n  { month: \"May\", startDateID: 120, endDateID: 150 },\n  { month: \"June\", startDateID: 151, endDateID: 180 },\n  { month: \"July\", startDateID: 181, endDateID: 211 },\n  { month: \"August\", startDateID: 212, endDateID: 242 },\n  { month: \"September\", startDateID: 243, endDateID: 272 },\n  { month: \"October\", startDateID: 273, endDateID: 303 },\n  { month: \"November\", startDateID: 306, endDateID: 333 },\n  { month: \"December\", startDateID: 334, endDateID: 364 }\n];\nexport function renderSolarRadial(\n  key,\n  svgContainer,\n  data,\n  {\n    svgWidth,\n    radius,\n    endAngle = 6.08,\n    monthLabelInnerPortion = 1.01,\n    monthLabelOuterPortion = 1.08,\n    handleMouseOver,\n    handleMouseOut,\n    colorScale\n  }\n) {\n  const ringSize = (1 - 0.5) / hours.length;\n\n  const pieGenerator = pie()\n    .sort(null)\n    .value(d => d.value)\n    .endAngle(endAngle);\n\n  const monthPieGenerator = pie()\n    .value(d => d.endDateID - d.startDateID)\n    .sort(null)\n    .endAngle(endAngle);\n\n  const g = select(svgContainer)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${svgWidth / 2},${svgWidth / 2})`);\n\n  //draw solar ring for every hour\n  hours.forEach(h => {\n    const solarRingGroup = g.append(\"g\").attr(\"class\", `hour-${h}`);\n\n    const solarRingUpdate = solarRingGroup.selectAll(\"path\").data(\n      pieGenerator(data.filter(d => d.time === h)),\n      d =>\n        `${d.data.date\n          .split(\"/\")\n          .slice(0, 2)\n          .join(\"\")}${h}`\n    );\n\n    solarRingUpdate.exit().remove();\n\n    solarRingUpdate\n      .enter()\n      .append(\"path\")\n      .merge(solarRingUpdate)\n      .on(\"mouseover\", function(d) {\n        //find all segments of the same date and hour\n        const pathId = select(this)\n          .attr(\"id\")\n          .replace(`${key}-`, \"\");\n        const selectedArcs = selectAll(`path[id*='${pathId}']`);\n        selectedArcs.each(function() {\n          select(this).attr(\"stroke\", \"#000\");\n        });\n        handleMouseOver(key, pathId);\n      })\n      .on(\"mouseout\", function(d) {\n        const pathId = select(this)\n          .attr(\"id\")\n          .replace(`${key}-`, \"\");\n        const selectedArcs = selectAll(`path[id*='${pathId}']`);\n        selectedArcs.each(function() {\n          select(this).attr(\"stroke\", \"none\");\n        });\n        handleMouseOut();\n      })\n      .transition()\n      .ease(easeLinear)\n      .delay((d, i) => i * 10)\n      .attrTween(\"d\", d => {\n        const ringIndex = indexOf(hours, d.data.time);\n        const arcStartAngle = d.index * (endAngle / 365);\n        const arcEndAngle = (d.index + 1) * (endAngle / 365);\n        const arcInterpolate = interpolate(arcStartAngle, arcEndAngle);\n\n        return t => {\n          return arc()({\n            innerRadius: (1 - (ringIndex + 1) * ringSize) * radius,\n            outerRadius: (1 - ringIndex * ringSize) * radius,\n            startAngle: arcStartAngle,\n            endAngle: arcInterpolate(t)\n          });\n        };\n      })\n      .attr(\n        \"id\",\n        d =>\n          `${key}-${d.data.date\n            .split(\"/\")\n            .slice(0, 2)\n            .join(\"\")}${h}`\n      )\n      .attr(\"fill\", d => (d.value ? colorScale(d.value) : \"#fff\"));\n  });\n\n  const timeLabelsGroup = g.append(\"g\").attr(\"class\", \"hourLabels\");\n  const timeLabelupdate = timeLabelsGroup.selectAll(\"text\").data(hours, d => d);\n\n  timeLabelupdate.exit().remove();\n\n  timeLabelupdate\n    .enter()\n    .append(\"text\")\n    .attr(\"x\", -1)\n    .attr(\"y\", (d, i) => -radius * (1 - ringSize - ringSize * i))\n    .attr(\"text-anchor\", \"end\")\n    .attr(\"fill\", \"#000\")\n    .attr(\"font-size\", `${ringSize * radius}px`)\n    .style(\"opacity\", 0)\n    .merge(timeLabelupdate)\n    .transition()\n    .duration(365 * 10)\n    .text(d => `${d}:00`)\n    .style(\"opacity\", 1);\n\n  //draw month arcs\n  const monthLabelsGroup = g.append(\"g\").attr(\"class\", \"monthLabels\");\n  const monthArcsUpdate = monthLabelsGroup\n    .selectAll(\"path\")\n    .data(monthPieGenerator(months), d => d.startDateID);\n  monthArcsUpdate.exit().remove();\n  monthArcsUpdate\n    .enter()\n    .append(\"path\")\n    .merge(monthArcsUpdate)\n    .attr(\"id\", (d, i) => `${key}-monthArc-${i}`)\n    .attr(\"fill\", \"#fff\")\n    // .attr(\"stroke\", \"#000\")\n    .attr(\"d\", d =>\n      arc()({\n        innerRadius: monthLabelInnerPortion * radius,\n        outerRadius: monthLabelOuterPortion * radius,\n        startAngle: d.startAngle,\n        endAngle: d.endAngle\n      })\n    )\n    .each(function(d, i) {\n      const arcPath = select(this).attr(\"d\");\n      const arcLastACommand = /L.+?A(.+?)Z/.exec(arcPath)[1].split(\",\");\n      const lineStart = /(^.+?)A/.exec(arcPath)[1];\n      const lineEnd = `L${arcLastACommand\n        .slice(arcLastACommand.length - 2)\n        .join()}`;\n      monthLabelsGroup\n        .append(\"path\")\n        .transition()\n        .delay((i * (365 * 10)) / 12)\n        .attr(\"d\", lineStart + lineEnd)\n        .attr(\"stroke\", \"#aaa\");\n    });\n  const monthLabelTexts = monthLabelsGroup\n    .selectAll(\"text\")\n    .data(months, d => d.startDateID);\n\n  monthLabelTexts.exit().remove();\n  monthLabelTexts\n    .enter()\n    .append(\"text\")\n    .attr(\"x\", 1)\n    .attr(\n      \"dy\",\n      `${(monthLabelOuterPortion - monthLabelInnerPortion - 0.01) * radius}`\n    )\n    .append(\"textPath\")\n    .attr(\"xlink:href\", (d, i) => `#${key}-monthArc-${i}`)\n    .text(d => d.month)\n    .attr(\n      \"font-size\",\n      `${(monthLabelOuterPortion - monthLabelInnerPortion) * radius}px`\n    )\n    .style(\"opacity\", 0)\n    .merge(monthLabelTexts)\n    .transition()\n    .delay((d, i) => (i * (365 * 10)) / 12)\n    .ease(easeLinear)\n    .style(\"opacity\", 1);\n}\n","import React, { Component } from \"react\";\nimport { renderSolarRadial } from \"./d3SolarRadial\";\nconst cityLookup = {\n  nyc: \"New York City\",\n  seattle: \"Seattle\",\n  houston: \"Houston\"\n};\nclass SolarRadial extends Component {\n  svgRef = React.createRef();\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.hoverId !== this.props.hoverId) {\n      return false;\n    }\n    return true;\n  }\n  componentDidMount() {\n    renderSolarRadial(this.props.id, this.svgRef.current, this.props.data, {\n      colorScale: this.props.colorScale,\n      radius: this.props.radius,\n      svgWidth: this.props.svgWidth,\n      handleMouseOver: this.props.handleMouseOver,\n      handleMouseOut: this.props.handleMouseOut\n    });\n  }\n  componentDidUpdate() {\n    renderSolarRadial(this.props.id, this.svgRef.current, this.props.data, {\n      colorScale: this.props.colorScale,\n      radius: this.props.radius,\n      containerWidth: this.props.svgWidth,\n      handleMouseOver: this.props.handleMouseOver,\n      handleMouseOut: this.props.handleMouseOut\n    });\n  }\n  render() {\n    return (\n      <div className=\"solar-grid\">\n        <svg\n          ref={this.svgRef}\n          width={this.props.svgWidth}\n          height={this.props.svgWidth}\n        />\n        <h3>{cityLookup[this.props.id]}</h3>\n      </div>\n    );\n  }\n}\nexport default SolarRadial;\n","import React from \"react\";\nexport const Tooltip = ({\n  date,\n  time,\n  DBT,\n  DPT,\n  windspd,\n  value,\n  style,\n  selectedMetric\n}) => {\n  return (\n    <div style={style} className=\"tooltip-grid\">\n      <div className=\"solar-measure tooltip-area\">\n        <div\n          style={{\n            color: \"#808080\",\n            fontSize: `${style.fontSize.replace(\"px\", \"\") * 0.8}px`\n          }}\n        >{`${date.replace(/\\/\\d{4}$/g, \"\")} ${time}:00`}</div>\n        <div\n          style={{\n            fontSize: `${style.fontSize.replace(\"px\", \"\") * 1.5}px`\n          }}\n        >\n          {value}\n        </div>\n        <div\n          style={{\n            color: \"#808080\",\n            fontSize: `${style.fontSize.replace(\"px\", \"\") * 0.8}px`\n          }}\n        >{`${selectedMetric} (Wh/m²)`}</div>\n      </div>\n      <div className=\"temp tooltip-area\">\n        <div>{`${DBT}/${DPT}`}</div>\n        <div\n          style={{\n            color: \"#808080\",\n            fontSize: `${style.fontSize.replace(\"px\", \"\") * 0.8}px`\n          }}\n        >\n          DBT/DPT (°C)\n        </div>\n      </div>\n      <div className=\"wind tooltip-area\">\n        <div>{windspd}</div>\n        <div\n          style={{\n            color: \"#808080\",\n            fontSize: `${style.fontSize.replace(\"px\", \"\") * 0.8}px`\n          }}\n        >\n          Wind Speed (m/s)\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { axisBottom, scaleLinear, select } from \"d3\";\n\nclass Legend extends Component {\n  axisRef = React.createRef();\n  renderTicks = g => {\n    const axisScale = scaleLinear()\n      .domain(this.props.colorScale.domain())\n      .range([0, this.props.legendWidth]);\n    return g\n      .attr(\"class\", `x-axis`)\n      .attr(\n        \"transform\",\n        `translate(${(this.props.svgWidth - this.props.legendWidth) / 2},${(this\n          .props.svgHeight +\n          this.props.legendHeight) /\n          2})`\n      )\n      .call(\n        axisBottom(axisScale)\n          .ticks(this.props.legendWidth / 80)\n          .tickSize(-this.props.legendHeight)\n      );\n  };\n  componentDidMount() {\n    select(this.axisRef.current).call(this.renderTicks);\n  }\n\n  render() {\n    const {\n      legendWidth,\n      legendHeight,\n      svgHeight,\n      svgWidth,\n      colorScale,\n      selectedMetric\n    } = this.props;\n\n    return (\n      <div className=\"legend-container\">\n        <div>{selectedMetric}</div>\n        <div>\n          <svg width={svgWidth} height={svgHeight}>\n            <defs>\n              <linearGradient id=\"linear-gradient\">\n                {colorScale.ticks().map((t, i, n) => (\n                  <stop\n                    key={t}\n                    offset={`${(100 * i) / n.length}%`}\n                    stopColor={colorScale(t)}\n                  />\n                ))}\n              </linearGradient>\n            </defs>\n            <g\n              transform={`translate(${(svgWidth - legendWidth) /\n                2},${(svgHeight - legendHeight) / 2})`}\n            >\n              <rect\n                width={legendWidth}\n                height={legendHeight}\n                style={{ fill: \"url(#linear-gradient)\" }}\n              />\n            </g>\n            <g ref={this.axisRef} />\n          </svg>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Legend;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport SolarRadial from \"./SolarRadial\";\nimport { RadioGroup, Radio } from \"react-radio-group\";\nimport { csv, scaleSequential, interpolateOrRd } from \"d3\";\nimport NYC from \"./nyc.CSV\";\nimport SEATTLE from \"./seattle.CSV\";\nimport HOUSTON from \"./houston.CSV\";\nimport { Tooltip } from \"./Tooltip\";\nimport Legend from \"./Legend\";\nconst colorScale = scaleSequential(interpolateOrRd).domain([1, 1100]);\n\nclass App extends Component {\n  state = {\n    selectedMetric: \"GHI\",\n    svgWidth: null,\n    solarData: null,\n    isLoaded: false,\n    tooltipData: null,\n    hoverId: null\n  };\n  containerRef = React.createRef();\n\n  handleMouseOver = (key, hoverId) => {\n    const month = hoverId.slice(0, 2);\n    const day = hoverId.slice(2, 4);\n    const time = hoverId.slice(4);\n\n    const tooltipData = Object.keys(this.state.solarData).map(key => {\n      return {\n        city: key,\n        data: this.state.solarData[key].filter(\n          d =>\n            d.date.startsWith(`${month}/${day}/`) && d.time === parseInt(time)\n        )\n      };\n    });\n    this.setState({ tooltipData, hoverId });\n  };\n  handleMouseOut = () => {\n    this.setState({ tooltipData: null, hoverId: null });\n  };\n\n  componentDidMount() {\n    this.setState({\n      svgWidth: (0.8 * window.innerWidth) / 3\n    });\n    this.fetchData(this.state.selectedMetric);\n  }\n  componentDidUpdate(preProps, prevState) {\n    if (prevState.selectedMetric !== this.state.selectedMetric) {\n      this.fetchData(this.state.selectedMetric);\n    }\n  }\n\n  handleChange = value => {\n    this.setState({ selectedMetric: value, isLoaded: false });\n  };\n  filterSolarData = (cityData, selectedMetric) => {\n    return cityData.map(d => {\n      return {\n        date: d[\"Date (MM/DD/YYYY)\"],\n        time: parseInt(d[\"Time (HH:MM)\"].split(\":\")[0]),\n        value: parseInt(d[`${selectedMetric} (W/m^2)`]),\n        DBT: parseFloat(d[\"Dry-bulb (C)\"]),\n        DPT: parseFloat(d[\"Dew-point (C)\"]),\n        windspd: parseFloat(d[\"Wspd (m/s)\"])\n      };\n    });\n  };\n\n  fetchData = selectedMetric => {\n    Promise.all([csv(NYC), csv(HOUSTON), csv(SEATTLE)])\n      .then(responses => {\n        const solarData = [];\n        responses.forEach(data => {\n          solarData.push(\n            data\n              .filter(d => {\n                const hour = parseInt(d[\"Time (HH:MM)\"].split(\":\")[0]);\n                return ![1, 2, 3, 4, 5, 6, 20, 21, 22, 23, 24].includes(hour);\n              })\n              .map(d => {\n                return {\n                  date: d[\"Date (MM/DD/YYYY)\"],\n                  time: parseInt(d[\"Time (HH:MM)\"].split(\":\")[0]),\n                  value: parseInt(d[`${selectedMetric} (W/m^2)`]),\n                  DBT: parseFloat(d[\"Dry-bulb (C)\"]),\n                  DPT: parseFloat(d[\"Dew-point (C)\"]),\n                  windspd: parseFloat(d[\"Wspd (m/s)\"])\n                };\n              })\n          );\n        });\n        return solarData;\n      })\n      .then(([nyc, houston, seattle]) => {\n        this.setState({\n          isLoaded: true,\n          solarData: {\n            nyc,\n            houston,\n            seattle\n          }\n        });\n      });\n  };\n\n  render() {\n    const {\n      solarData,\n      svgWidth,\n      selectedMetric,\n      isLoaded,\n      tooltipData,\n      hoverId\n    } = this.state;\n    const radius = (0.85 * svgWidth) / 2;\n    return (\n      <div className=\"App\">\n        <div className=\"text\">\n          <h2> Solar Rhythm in NYC, Houston and Seattle</h2>\n          <p>\n            The \"circular heatmaps\" below visualize the hourly (7am-7pm) solar\n            values in a single year for three US cities. The two important\n            metrics represented in the visualizations are Global Horizontal\n            Irradiance (GHI), the total amount of direct and diffuse solar\n            radiation received on a horizontal surface, and the Direct Normal\n            Irradiance (DNI), which is the amount of solar radiation received in\n            a collimated beam on a surface that is always held perpendicular (or\n            normal) to the sun. Hover over hourly segments to see other\n            meteorological metrics such as dry bulb temperature (DBT), dew point\n            temperature (DPT), and wind speed.\n          </p>\n          <p>\n            Data source: Typical Meteorological Year, version 3 (TMY3) data sets\n            released by the National Renewable Energy Laboratory (NREL).\n          </p>\n        </div>\n\n        <div className=\"radio-container\">\n          <RadioGroup\n            name=\"fruit\"\n            selectedValue={selectedMetric}\n            onChange={this.handleChange}\n          >\n            <span className=\"radio-label\">Choose a metric:</span>\n            <label className=\"radio-label\">\n              <Radio value=\"GHI\" />\n              GHI\n            </label>\n            <label className=\"radio-label\">\n              <Radio value=\"DNI\" />\n              DNI\n            </label>\n          </RadioGroup>\n        </div>\n\n        {isLoaded ? (\n          <div className=\"grid-container\">\n            {Object.keys(solarData).map(key => (\n              <SolarRadial\n                key={key}\n                data={solarData[key]}\n                svgWidth={svgWidth}\n                radius={radius}\n                colorScale={colorScale}\n                id={key}\n                handleMouseOver={this.handleMouseOver}\n                handleMouseOut={this.handleMouseOut}\n                hoverId={hoverId}\n              />\n            ))}\n            {tooltipData &&\n              tooltipData.map((d, i) => (\n                <Tooltip\n                  key={d.city}\n                  selectedMetric={selectedMetric}\n                  {...d.data[0]}\n                  style={{\n                    position: \"absolute\",\n                    width: radius,\n                    height: svgWidth / 3,\n                    left: (svgWidth - radius) / 2 + svgWidth * i,\n                    top: (svgWidth - radius) / 2,\n                    fontSize: `${(18 * svgWidth) / 600}px`\n                  }}\n                />\n              ))}\n          </div>\n        ) : (\n          <div className=\"loader\" style={{ height: `${svgWidth + 30}px` }}>\n            ...loading\n          </div>\n        )}\n\n        <Legend\n          selectedMetric={selectedMetric}\n          colorScale={colorScale}\n          legendHeight={20}\n          legendWidth={300}\n          svgHeight={100}\n          svgWidth={350}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}